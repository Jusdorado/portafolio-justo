name: Deploy Portfolio

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run type check
      run: npm run type-check
      
    - name: Run linting
      run: npm run lint
      
    - name: Run tests
      run: npm test
      
    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_GA_MEASUREMENT_ID: ${{ secrets.GA_MEASUREMENT_ID }}
        NEXT_PUBLIC_SITE_URL: ${{ secrets.SITE_URL }}

  lighthouse:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_GA_MEASUREMENT_ID: ${{ secrets.GA_MEASUREMENT_ID }}
        NEXT_PUBLIC_SITE_URL: ${{ secrets.SITE_URL }}
        
    - name: Start application
      run: npm start &
      env:
        PORT: 3000
        
    - name: Wait for server
      run: npx wait-on http://localhost:3000
      
    - name: Run Lighthouse CI
      run: npm run lighthouse
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  deploy-vercel:
    runs-on: ubuntu-latest
    needs: [test, lighthouse]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        
  deploy-netlify:
    runs-on: ubuntu-latest
    needs: [test, lighthouse]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip netlify]')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_GA_MEASUREMENT_ID: ${{ secrets.GA_MEASUREMENT_ID }}
        NEXT_PUBLIC_SITE_URL: ${{ secrets.SITE_URL }}
        
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v2.1
      with:
        publish-dir: './out'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: false
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  notify-success:
    runs-on: ubuntu-latest
    needs: [deploy-vercel, deploy-netlify]
    if: always() && (needs.deploy-vercel.result == 'success' || needs.deploy-netlify.result == 'success')
    
    steps:
    - name: Notify deployment success
      run: |
        echo "✅ Deployment successful!"
        echo "Site URL: ${{ secrets.SITE_URL }}"
        
  notify-failure:
    runs-on: ubuntu-latest
    needs: [test, lighthouse, deploy-vercel, deploy-netlify]
    if: always() && (needs.test.result == 'failure' || needs.lighthouse.result == 'failure' || needs.deploy-vercel.result == 'failure' || needs.deploy-netlify.result == 'failure')
    
    steps:
    - name: Notify deployment failure
      run: |
        echo "❌ Deployment failed!"
        echo "Check the logs for more details."
